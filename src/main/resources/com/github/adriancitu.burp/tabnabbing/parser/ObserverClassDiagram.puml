@startuml
legend top left
Observer/Observable class diagram
for parsing HTML
end legend

package java.io {
interface Closable {
    void close();
}
}

package com.github.adriancitu.burp.tabnabbing.parser {
interface IByteReader {
   public byte[] fetchMoreBytes(int howManyBytes)
   public void attachListeners(List<IByteReaderObserver> listeners)
}

interface IByteReaderObserver {
    void handleByte(IByteReader reader, byte toHandle)
    boolean problemFound()
    Optional<TabNappingProblem>getProblem()
}

abstract class AbstractObserver
class HTMLResponseReader {
    Optional<String> getProblem()
}





Closable  <|-- IByteReader
Closable  <|-- IByteReaderObserver


IByteReaderObserver <|-- AbstractObserver

AbstractObserver <|-- HTMLAnchorReaderObserver
AbstractObserver <|-- JSWindowsOpenReaderObserver

}

package com.github.adriancitu.burp.tabnabbing.util {
    class HtmlByteArrayUtility


HTMLAnchorReaderObserver ... HtmlByteArrayUtility: uses
JSWindowsOpenReaderObserver ... HtmlByteArrayUtility: uses

IByteReader <|-- HTMLResponseReader

IByteReader o-- "have list of" IByteReaderObserver
}
@enduml